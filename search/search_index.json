{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"autodl-irssi is a plugin for irssi that monitors IRC announce channels for torrent trackers and downloads torrent files based on user-defined filters. Find help from or help other users on IRC: #autodl-community on irc.p2p-network.net ; you can use the preconfigured web-based client Mibbit .","title":"Home"},{"location":"changelog/","text":"Change Log \u00b6 Notable changes for autodl-irssi . v2.6.1 (2019-10-28) \u00b6 Commits Fixed \u00b6 Improper support for newer versions of Net::SSLeay . v2.6.0 (2019-10-28) \u00b6 Commits Added \u00b6 InfoName macro. Support for newer versions of Net::SSLeay . v2.5.0 (2019-02-06) \u00b6 Commits Added \u00b6 UHD Blu-Ray constant. v2.4.0 (2018-09-08) \u00b6 Commits The maintainer no longer provides support. Look to other users for help. v2.3.0 (2018-03-10) \u00b6 Commits Added \u00b6 Add \"h264 10-bit to constants. Add constant group for h265/x265 10-bit. Add \"Lossless 24-bit\" to constants. Add WMA to constants. Add TrueHD to constants. v2.2.0 (2018-01-30) \u00b6 Commits Changed \u00b6 Change censor placeholders to be more specific. Make auto updates the default. Fixed \u00b6 Make censor regex work with or without trailing slash. Don't overwrite already set variables in auto extractor. v2.1.0 (2018-01-19) \u00b6 Commits Added \u00b6 Add 4k alias for 2160p resolution. Changed \u00b6 Split up remux encoders. Use proper size unit prefixes in status messages. community-v2.0.1 (2017-12-14) \u00b6 Commits Changed \u00b6 Revert \"Allow overriding torrent action settings in a filter without needing to set them all\". community-v2.0.0 (2017-12-12) \u00b6 Commits Added \u00b6 Add h265 remux to constants. Add test upload-type. Changed \u00b6 Allow overriding torrent action settings in a filter without needing to set them all. Deprecate autodl2.cfg. Removed \u00b6 Remove support for allowed option. Removed support for /etc/autodl.cfg. Fixed \u00b6 Fix smart-episode option ignoring proper/repack. community-v1.65 (2017-08-30) \u00b6 Commits Added \u00b6 Add 2160p resolution to constants. Fixed \u00b6 Fix bad subroutine references. community-v1.64 (2017-03-18) \u00b6 Commits Added \u00b6 Add HEVC/x265 constants. Fixed \u00b6 Fixed update callback references. community-v1.63 (2017-03-09) \u00b6 Commits Changed \u00b6 Add release to download history earlier in the process. Fixed \u00b6 Fix smart-episode logic. community-v1.62 (2016-03-14) \u00b6 Commits Added \u00b6 Add smart-episode filter option. community-v1.61 (2016-01-25) \u00b6 Commits Added \u00b6 Add priority filter option. Add message for successful loading of configuration files. Changed \u00b6 Changed method for matching release groups. community-v1.60 (2015-10-01) \u00b6 Commits Changed \u00b6 Add warning message for using bare wildcards in filter options. Filters using bare wildcards will no longer work. Change updater to use GitHub's Releases API. community-v1.54 (2015-04-30) \u00b6 Commits Added \u00b6 Add regex for sensitive data censoring. Add SNI support to SSLSocket. community-v1.53 (2015-04-16) \u00b6 Commits Changed \u00b6 Re-add '-' to replacement list for canonicalization. Change rTorrent commands/mehtods to use new style. community-v1.52 (2015-03-13) \u00b6 Commits Added \u00b6 Add match-release-groups filter option. This should be used instead of release-groups. Fixed \u00b6 Fix except-release groups filter option. community-v1.51 (2015-02-25) \u00b6 Commits Added \u00b6 Add except-release-groups filter options. Add use-regex option to Option and Filter headers. This allows the use of regex syntax for match/except-releases filter options. Add advanced-output-sites option. Changed \u00b6 Separate advanced output functionality from the output-level option. Previously, output-level=5 would output variables captured from announces. This functionality is now handled by the advanced-output-sites option. community-v1.50 (2015-01-02) \u00b6 Commits Added \u00b6 Add containers filter option. Add release-groups filter option. Changed \u00b6 Remove torrent size message. Move max-download message to only happen when a release is fully matched. community-v1.46 (2014-08-24) \u00b6 Commits Added \u00b6 Add DVD-R to constants. Add HDCAM group to constants. Add HDTS group to constants. Add origins filter option. Changed \u00b6 Removed faulty assumptions from release name auto extractor. Some were outdated. Some caused invalid values. This specifically causes issues with SD resolution releases where the resolution isn't announced separately by the tracker. community-v1.45 (2014-05-15) \u00b6 Commits Added \u00b6 Add CTCP ACTION handling. community-v1.44 (2014-04-18) \u00b6 Commits Added \u00b6 Add 10-bit x264 constant group. Changed \u00b6 Change update check interval to 24 hours. Move update hosting to cloud server. community-v1.43 (2014-01-13) \u00b6 Commits Added \u00b6 Added more source constants. Changed \u00b6 Improve /autodl whatsnew output. community-v1.42 (2013-12-17) \u00b6 Commits Added \u00b6 Add forever to max-download-per filter option. Changed \u00b6 Make tracker updates follow update-check rules. Improve update messages. Make 'not downloaded' message more noticeable. Separate WEB-DL and WEBRip constant groups. Make new slash commands available to gui-server. community-v1.41 (2013-08-14) \u00b6 Commits Added \u00b6 Add MPEG2 Remux constant group. Add /autodl reloadtrackers command. Add /autodl reload command. Add /autodl version command. Add hour to max-download-per filter option. Changed \u00b6 Remove trackers into separate repository and add as submodule. Change max-downloads to work without max-downloads-per. Delete removed tracker files on update. community-v1.40 (2013-05-15) \u00b6 Commits Added \u00b6 Add Beathau5 tracker. Add macro support to upload-watch-dir. Add upload-delay-secs filter option. Add irssi eval command support. Add close-nickserv option to IRC header. Add download-duplicates filter option. Changed \u00b6 Change PreToMe to use passkey. Improve ep/season parsing logic. Add DIGEST::SHA compat. Add count output for max-download filters. Fixed \u00b6 Update IRC info for My Anonamouse. Remove FTN deobfuscation. community-v1.35 (2013-04-16) \u00b6 Commits Added \u00b6 Add scene and max-pretime filter options to FunFile. Add freeleech filter option to IPTorrents. Add server-password option to IRC header. Add bnc option to server header. Changed \u00b6 Change Blackcats to use passkey. Add ignore to GazelleGames. Add ignores to PTN. Add ignore to Empornium. Change authkey to passkey in FunFile. Removed \u00b6 Remove HDBits tracker Fixed \u00b6 Force SSL for Awesome-HD. Force SSL for Blackcats. Force SSL for IPtorrents. Force SSL for Waffles. Update regex and download URL for AnimeBytes. Update PTN. Move AVC to proper constant group. Update server name for AnimeBytes. community-v1.34 (2013-02-17) \u00b6 Commits Added \u00b6 Re-add filelist.ro. Add Empornium tracker. Add torrent size capture to GFTracker. Add GazelleGames tracker. Add AnimeBytes tracker. Add The Dark Syndicate tracker. Re-add PreToMe with updated info. Add TSTN tracker. Add log-scores filter option. Add log-scores filter option to What.CD. Add log-scores filter option to BaconBits. Add freeleech filter option to What.CD. Add freeleech-percents filter option. Add freeleech-percents filter option to Awesome-HD. Changed \u00b6 Change update URL to Google Code. Removed \u00b6 Remove bitGAMER. Fixed \u00b6 Force SSL for RevolutionTT. Update channel name for GazelleGames. Update download URL for Animebytes. Update PussyTorrents. community-v1.33 (2012-10-31) \u00b6 Commits Added \u00b6 Add remux formats to constants. Add freeleech filter option. Add freeleech filter option to PassThePopcorn. Changed \u00b6 Change IPTorrents to use passkey. Modify Awesome-HD. Removed \u00b6 Remove dead trackers. Fixed \u00b6 Update RevolutionTT. Update Waffles. Update PTN. community-v1.32 (2012-10-28) \u00b6 Commits Initial fork from original project.","title":"Changelog"},{"location":"changelog/#change-log","text":"Notable changes for autodl-irssi .","title":"Change Log"},{"location":"changelog/#v261-2019-10-28","text":"Commits","title":"v2.6.1 (2019-10-28)"},{"location":"changelog/#fixed","text":"Improper support for newer versions of Net::SSLeay .","title":"Fixed"},{"location":"changelog/#v260-2019-10-28","text":"Commits","title":"v2.6.0 (2019-10-28)"},{"location":"changelog/#added","text":"InfoName macro. Support for newer versions of Net::SSLeay .","title":"Added"},{"location":"changelog/#v250-2019-02-06","text":"Commits","title":"v2.5.0 (2019-02-06)"},{"location":"changelog/#added_1","text":"UHD Blu-Ray constant.","title":"Added"},{"location":"changelog/#v240-2018-09-08","text":"Commits The maintainer no longer provides support. Look to other users for help.","title":"v2.4.0 (2018-09-08)"},{"location":"changelog/#v230-2018-03-10","text":"Commits","title":"v2.3.0 (2018-03-10)"},{"location":"changelog/#added_2","text":"Add \"h264 10-bit to constants. Add constant group for h265/x265 10-bit. Add \"Lossless 24-bit\" to constants. Add WMA to constants. Add TrueHD to constants.","title":"Added"},{"location":"changelog/#v220-2018-01-30","text":"Commits","title":"v2.2.0 (2018-01-30)"},{"location":"changelog/#changed","text":"Change censor placeholders to be more specific. Make auto updates the default.","title":"Changed"},{"location":"changelog/#fixed_1","text":"Make censor regex work with or without trailing slash. Don't overwrite already set variables in auto extractor.","title":"Fixed"},{"location":"changelog/#v210-2018-01-19","text":"Commits","title":"v2.1.0 (2018-01-19)"},{"location":"changelog/#added_3","text":"Add 4k alias for 2160p resolution.","title":"Added"},{"location":"changelog/#changed_1","text":"Split up remux encoders. Use proper size unit prefixes in status messages.","title":"Changed"},{"location":"changelog/#community-v201-2017-12-14","text":"Commits","title":"community-v2.0.1 (2017-12-14)"},{"location":"changelog/#changed_2","text":"Revert \"Allow overriding torrent action settings in a filter without needing to set them all\".","title":"Changed"},{"location":"changelog/#community-v200-2017-12-12","text":"Commits","title":"community-v2.0.0 (2017-12-12)"},{"location":"changelog/#added_4","text":"Add h265 remux to constants. Add test upload-type.","title":"Added"},{"location":"changelog/#changed_3","text":"Allow overriding torrent action settings in a filter without needing to set them all. Deprecate autodl2.cfg.","title":"Changed"},{"location":"changelog/#removed","text":"Remove support for allowed option. Removed support for /etc/autodl.cfg.","title":"Removed"},{"location":"changelog/#fixed_2","text":"Fix smart-episode option ignoring proper/repack.","title":"Fixed"},{"location":"changelog/#community-v165-2017-08-30","text":"Commits","title":"community-v1.65 (2017-08-30)"},{"location":"changelog/#added_5","text":"Add 2160p resolution to constants.","title":"Added"},{"location":"changelog/#fixed_3","text":"Fix bad subroutine references.","title":"Fixed"},{"location":"changelog/#community-v164-2017-03-18","text":"Commits","title":"community-v1.64 (2017-03-18)"},{"location":"changelog/#added_6","text":"Add HEVC/x265 constants.","title":"Added"},{"location":"changelog/#fixed_4","text":"Fixed update callback references.","title":"Fixed"},{"location":"changelog/#community-v163-2017-03-09","text":"Commits","title":"community-v1.63 (2017-03-09)"},{"location":"changelog/#changed_4","text":"Add release to download history earlier in the process.","title":"Changed"},{"location":"changelog/#fixed_5","text":"Fix smart-episode logic.","title":"Fixed"},{"location":"changelog/#community-v162-2016-03-14","text":"Commits","title":"community-v1.62 (2016-03-14)"},{"location":"changelog/#added_7","text":"Add smart-episode filter option.","title":"Added"},{"location":"changelog/#community-v161-2016-01-25","text":"Commits","title":"community-v1.61 (2016-01-25)"},{"location":"changelog/#added_8","text":"Add priority filter option. Add message for successful loading of configuration files.","title":"Added"},{"location":"changelog/#changed_5","text":"Changed method for matching release groups.","title":"Changed"},{"location":"changelog/#community-v160-2015-10-01","text":"Commits","title":"community-v1.60 (2015-10-01)"},{"location":"changelog/#changed_6","text":"Add warning message for using bare wildcards in filter options. Filters using bare wildcards will no longer work. Change updater to use GitHub's Releases API.","title":"Changed"},{"location":"changelog/#community-v154-2015-04-30","text":"Commits","title":"community-v1.54 (2015-04-30)"},{"location":"changelog/#added_9","text":"Add regex for sensitive data censoring. Add SNI support to SSLSocket.","title":"Added"},{"location":"changelog/#community-v153-2015-04-16","text":"Commits","title":"community-v1.53 (2015-04-16)"},{"location":"changelog/#changed_7","text":"Re-add '-' to replacement list for canonicalization. Change rTorrent commands/mehtods to use new style.","title":"Changed"},{"location":"changelog/#community-v152-2015-03-13","text":"Commits","title":"community-v1.52 (2015-03-13)"},{"location":"changelog/#added_10","text":"Add match-release-groups filter option. This should be used instead of release-groups.","title":"Added"},{"location":"changelog/#fixed_6","text":"Fix except-release groups filter option.","title":"Fixed"},{"location":"changelog/#community-v151-2015-02-25","text":"Commits","title":"community-v1.51 (2015-02-25)"},{"location":"changelog/#added_11","text":"Add except-release-groups filter options. Add use-regex option to Option and Filter headers. This allows the use of regex syntax for match/except-releases filter options. Add advanced-output-sites option.","title":"Added"},{"location":"changelog/#changed_8","text":"Separate advanced output functionality from the output-level option. Previously, output-level=5 would output variables captured from announces. This functionality is now handled by the advanced-output-sites option.","title":"Changed"},{"location":"changelog/#community-v150-2015-01-02","text":"Commits","title":"community-v1.50 (2015-01-02)"},{"location":"changelog/#added_12","text":"Add containers filter option. Add release-groups filter option.","title":"Added"},{"location":"changelog/#changed_9","text":"Remove torrent size message. Move max-download message to only happen when a release is fully matched.","title":"Changed"},{"location":"changelog/#community-v146-2014-08-24","text":"Commits","title":"community-v1.46 (2014-08-24)"},{"location":"changelog/#added_13","text":"Add DVD-R to constants. Add HDCAM group to constants. Add HDTS group to constants. Add origins filter option.","title":"Added"},{"location":"changelog/#changed_10","text":"Removed faulty assumptions from release name auto extractor. Some were outdated. Some caused invalid values. This specifically causes issues with SD resolution releases where the resolution isn't announced separately by the tracker.","title":"Changed"},{"location":"changelog/#community-v145-2014-05-15","text":"Commits","title":"community-v1.45 (2014-05-15)"},{"location":"changelog/#added_14","text":"Add CTCP ACTION handling.","title":"Added"},{"location":"changelog/#community-v144-2014-04-18","text":"Commits","title":"community-v1.44 (2014-04-18)"},{"location":"changelog/#added_15","text":"Add 10-bit x264 constant group.","title":"Added"},{"location":"changelog/#changed_11","text":"Change update check interval to 24 hours. Move update hosting to cloud server.","title":"Changed"},{"location":"changelog/#community-v143-2014-01-13","text":"Commits","title":"community-v1.43 (2014-01-13)"},{"location":"changelog/#added_16","text":"Added more source constants.","title":"Added"},{"location":"changelog/#changed_12","text":"Improve /autodl whatsnew output.","title":"Changed"},{"location":"changelog/#community-v142-2013-12-17","text":"Commits","title":"community-v1.42 (2013-12-17)"},{"location":"changelog/#added_17","text":"Add forever to max-download-per filter option.","title":"Added"},{"location":"changelog/#changed_13","text":"Make tracker updates follow update-check rules. Improve update messages. Make 'not downloaded' message more noticeable. Separate WEB-DL and WEBRip constant groups. Make new slash commands available to gui-server.","title":"Changed"},{"location":"changelog/#community-v141-2013-08-14","text":"Commits","title":"community-v1.41 (2013-08-14)"},{"location":"changelog/#added_18","text":"Add MPEG2 Remux constant group. Add /autodl reloadtrackers command. Add /autodl reload command. Add /autodl version command. Add hour to max-download-per filter option.","title":"Added"},{"location":"changelog/#changed_14","text":"Remove trackers into separate repository and add as submodule. Change max-downloads to work without max-downloads-per. Delete removed tracker files on update.","title":"Changed"},{"location":"changelog/#community-v140-2013-05-15","text":"Commits","title":"community-v1.40 (2013-05-15)"},{"location":"changelog/#added_19","text":"Add Beathau5 tracker. Add macro support to upload-watch-dir. Add upload-delay-secs filter option. Add irssi eval command support. Add close-nickserv option to IRC header. Add download-duplicates filter option.","title":"Added"},{"location":"changelog/#changed_15","text":"Change PreToMe to use passkey. Improve ep/season parsing logic. Add DIGEST::SHA compat. Add count output for max-download filters.","title":"Changed"},{"location":"changelog/#fixed_7","text":"Update IRC info for My Anonamouse. Remove FTN deobfuscation.","title":"Fixed"},{"location":"changelog/#community-v135-2013-04-16","text":"Commits","title":"community-v1.35 (2013-04-16)"},{"location":"changelog/#added_20","text":"Add scene and max-pretime filter options to FunFile. Add freeleech filter option to IPTorrents. Add server-password option to IRC header. Add bnc option to server header.","title":"Added"},{"location":"changelog/#changed_16","text":"Change Blackcats to use passkey. Add ignore to GazelleGames. Add ignores to PTN. Add ignore to Empornium. Change authkey to passkey in FunFile.","title":"Changed"},{"location":"changelog/#removed_1","text":"Remove HDBits tracker","title":"Removed"},{"location":"changelog/#fixed_8","text":"Force SSL for Awesome-HD. Force SSL for Blackcats. Force SSL for IPtorrents. Force SSL for Waffles. Update regex and download URL for AnimeBytes. Update PTN. Move AVC to proper constant group. Update server name for AnimeBytes.","title":"Fixed"},{"location":"changelog/#community-v134-2013-02-17","text":"Commits","title":"community-v1.34 (2013-02-17)"},{"location":"changelog/#added_21","text":"Re-add filelist.ro. Add Empornium tracker. Add torrent size capture to GFTracker. Add GazelleGames tracker. Add AnimeBytes tracker. Add The Dark Syndicate tracker. Re-add PreToMe with updated info. Add TSTN tracker. Add log-scores filter option. Add log-scores filter option to What.CD. Add log-scores filter option to BaconBits. Add freeleech filter option to What.CD. Add freeleech-percents filter option. Add freeleech-percents filter option to Awesome-HD.","title":"Added"},{"location":"changelog/#changed_17","text":"Change update URL to Google Code.","title":"Changed"},{"location":"changelog/#removed_2","text":"Remove bitGAMER.","title":"Removed"},{"location":"changelog/#fixed_9","text":"Force SSL for RevolutionTT. Update channel name for GazelleGames. Update download URL for Animebytes. Update PussyTorrents.","title":"Fixed"},{"location":"changelog/#community-v133-2012-10-31","text":"Commits","title":"community-v1.33 (2012-10-31)"},{"location":"changelog/#added_22","text":"Add remux formats to constants. Add freeleech filter option. Add freeleech filter option to PassThePopcorn.","title":"Added"},{"location":"changelog/#changed_18","text":"Change IPTorrents to use passkey. Modify Awesome-HD.","title":"Changed"},{"location":"changelog/#removed_3","text":"Remove dead trackers.","title":"Removed"},{"location":"changelog/#fixed_10","text":"Update RevolutionTT. Update Waffles. Update PTN.","title":"Fixed"},{"location":"changelog/#community-v132-2012-10-28","text":"Commits Initial fork from original project.","title":"community-v1.32 (2012-10-28)"},{"location":"faq/","text":"How do I get a new tracker added to autodl-irssi? \u00b6 First, check with tracker staff to get permission; some trackers don't want people autodownloading. If you know how to create a new tracker file or edit an existing tracker file to suit your needs, you can submit a Pull Request to the trackers repository following the contributing guidelines . If you need it to be created by a member of autodl-community, submit an issue to the trackers repository or come to the IRC channel in the footer with the following information: Tracker name Tracker abbreviation (if applicable) Tracker IRC server address Tracker IRC announce channel Tracker IRC announcer name A decent size sampling of announces from the announce channel (at least 5-10) Preferably, this information should be provided using a pastebin site. More information may be requested if necessary. What's this Could not connect (111) error? \u00b6 Error downloading files. Make sure autodl-irssi is started and configured properly (eg. password, port number): Error getting files listing: Error: Could not connect: (111) Connection refused This is an error that occurs in the ruTorrent plugin when it can't communicate with autodl-irssi. This could be for a number of reasons: irssi may not be running autodl-irssi may not be enabled in irssi Multiple instances of irssi with autodl-irssi enabled could be running gui-server-port and gui-server-password settings may not be set in your autodl.cfg file You may be using a seedbox from Feral Hosting; follow their instructions to get it working What's this error about bare wildcards? \u00b6 _____ is set to bare wildcard. This is unnecessary and unsupported by some options. Many people believe they need to set a filter option to a bare asterisk to grab everything based on that filter option. If that were true, they would have to set ALL filter options to a bare asterisk. However, a filter in autodl-irssi, when enabled, matches everything until you set filter options to limit (aka filter) the results. Also, autodl-irssi supports using wildcards in only one type of option, comma separated lists . This mistaken belief can cause people to use bare asterisks in options that don't even support it. TL/DR If you're not limiting/filtering by an option, you don't need to set it to anything.","title":"FAQ"},{"location":"faq/#how-do-i-get-a-new-tracker-added-to-autodl-irssi","text":"First, check with tracker staff to get permission; some trackers don't want people autodownloading. If you know how to create a new tracker file or edit an existing tracker file to suit your needs, you can submit a Pull Request to the trackers repository following the contributing guidelines . If you need it to be created by a member of autodl-community, submit an issue to the trackers repository or come to the IRC channel in the footer with the following information: Tracker name Tracker abbreviation (if applicable) Tracker IRC server address Tracker IRC announce channel Tracker IRC announcer name A decent size sampling of announces from the announce channel (at least 5-10) Preferably, this information should be provided using a pastebin site. More information may be requested if necessary.","title":"How do I get a new tracker added to autodl-irssi?"},{"location":"faq/#whats-this-could-not-connect-111-error","text":"Error downloading files. Make sure autodl-irssi is started and configured properly (eg. password, port number): Error getting files listing: Error: Could not connect: (111) Connection refused This is an error that occurs in the ruTorrent plugin when it can't communicate with autodl-irssi. This could be for a number of reasons: irssi may not be running autodl-irssi may not be enabled in irssi Multiple instances of irssi with autodl-irssi enabled could be running gui-server-port and gui-server-password settings may not be set in your autodl.cfg file You may be using a seedbox from Feral Hosting; follow their instructions to get it working","title":"What's this Could not connect (111) error?"},{"location":"faq/#whats-this-error-about-bare-wildcards","text":"_____ is set to bare wildcard. This is unnecessary and unsupported by some options. Many people believe they need to set a filter option to a bare asterisk to grab everything based on that filter option. If that were true, they would have to set ALL filter options to a bare asterisk. However, a filter in autodl-irssi, when enabled, matches everything until you set filter options to limit (aka filter) the results. Also, autodl-irssi supports using wildcards in only one type of option, comma separated lists . This mistaken belief can cause people to use bare asterisks in options that don't even support it. TL/DR If you're not limiting/filtering by an option, you don't need to set it to anything.","title":"What's this error about bare wildcards?"},{"location":"installation/","text":"Requirements \u00b6 autodl-irssi requires irssi compiled with Perl support. autodl-irssi has the following Perl module dependencies: * Archive::Zip * Net::SSLeay * HTML::Entities * XML::LibXML * Digest::SHA * JSON * JSON::XS (optional) Use your package manager to install them or use the CPAN utility. If you use CPAN, you will need a build environment already installed, eg. gcc, make, etc. cpan Archive::Zip Net::SSLeay HTML::Entities XML::LibXML Digest::SHA JSON JSON::XS Installation \u00b6 Note: Make sure you're not root when you execute the following commands. mkdir -p ~/.irssi/scripts/autorun cd ~/.irssi/scripts curl -sL http://git.io/vlcND | grep -Po '(?<=\"browser_download_url\": \")(.*-v[\\d.]+.zip)' | xargs wget --quiet -O autodl-irssi.zip unzip -o autodl-irssi.zip rm autodl-irssi.zip cp autodl-irssi.pl autorun/ mkdir -p ~/.autodl touch ~/.autodl/autodl.cfg The autodl-irssi startup script has been copied to the autorun directory so it will be started automatically when irssi is started. Post installation \u00b6 autodl Window \u00b6 By default, all autodl-irssi output goes to the (status) window. If you want to send all autodl-irssi output to its own window, you can create a window in irssi named autodl . Use these irssi commands to create a new window named autodl and place it right after the status window (i.e., window position 2) /window new hidden /window name autodl /window move 2 /layout save /save ruTorrent Plugin \u00b6 If you want to install the ruTorrent plugin, see the instructions here .","title":"Installation"},{"location":"installation/#requirements","text":"autodl-irssi requires irssi compiled with Perl support. autodl-irssi has the following Perl module dependencies: * Archive::Zip * Net::SSLeay * HTML::Entities * XML::LibXML * Digest::SHA * JSON * JSON::XS (optional) Use your package manager to install them or use the CPAN utility. If you use CPAN, you will need a build environment already installed, eg. gcc, make, etc. cpan Archive::Zip Net::SSLeay HTML::Entities XML::LibXML Digest::SHA JSON JSON::XS","title":"Requirements"},{"location":"installation/#installation","text":"Note: Make sure you're not root when you execute the following commands. mkdir -p ~/.irssi/scripts/autorun cd ~/.irssi/scripts curl -sL http://git.io/vlcND | grep -Po '(?<=\"browser_download_url\": \")(.*-v[\\d.]+.zip)' | xargs wget --quiet -O autodl-irssi.zip unzip -o autodl-irssi.zip rm autodl-irssi.zip cp autodl-irssi.pl autorun/ mkdir -p ~/.autodl touch ~/.autodl/autodl.cfg The autodl-irssi startup script has been copied to the autorun directory so it will be started automatically when irssi is started.","title":"Installation"},{"location":"installation/#post-installation","text":"","title":"Post installation"},{"location":"installation/#autodl-window","text":"By default, all autodl-irssi output goes to the (status) window. If you want to send all autodl-irssi output to its own window, you can create a window in irssi named autodl . Use these irssi commands to create a new window named autodl and place it right after the status window (i.e., window position 2) /window new hidden /window name autodl /window move 2 /layout save /save","title":"autodl Window"},{"location":"installation/#rutorrent-plugin","text":"If you want to install the ruTorrent plugin, see the instructions here .","title":"ruTorrent Plugin"},{"location":"configuration/actions/","text":"autodl-irssi can save a torrent file to a watch directory, upload it to uTorrent webui, upload it to an FTP server, execute a program or use uTorrent to save it to a dynamic directory name that depends on the current torrent. By default, the global action set in your [options] header is used, but you can override it in any filter by placing a new upload-type in the [filter] header. Test \u00b6 upload-type = test Take no action after matching an announce. This is the default action. rTorrent \u00b6 upload-type = rtorrent rt-dir = /home/YOURNAME/downloads/$(Month)$(Day)/$(Tracker) rt-commands = print=\"Added: $(TorrentName)\"; print=\"Hello, world!\" rt-label = $(Tracker) #rt-ratio-group = rat_3 #rt-channel = thr_2 rt-priority = high #rt-ignore-scheduler = true #rt-dont-add-name = false rt-dir \u00b6 The destination directory. The torrent data will be saved here. Supports macros . rt-commands \u00b6 Execute the given rTorrent commands when loading the torrent file. rt-label \u00b6 Set a ruTorrent label. rt-ratio-group \u00b6 Set a ruTorrent ratio group. Valid names are rat_0, rat_1, ..., rat_7. You must have the ratio ruTorrent plugin installed. rt-channel \u00b6 Set a ruTorrent channel. Valid names are thr_0, thr_1, ..., thr_9. You must have the throttle ruTorrent plugin installed. rt-priority \u00b6 Set the torrent priority. Valid values are 0, dont-download, 1, low, 2, normal, 3, high. If you set it to dont-download (or 0), the torrent is loaded, but not started. rt-ignore-scheduler \u00b6 Set it to true to disable the ruTorrent scheduler. rt-dont-add-name \u00b6 Set it to true if you don't want the torrent name to be added to the path. Watch Directory \u00b6 upload-type = watchdir upload-watch-dir = /home/myusername/mywatchdir upload-watch-dir \u00b6 Your torrent client's watch directory. Supports macros . uTorrent WebUI \u00b6 upload-type = webui Set webui user, password, etc below the [webui] header! FTP \u00b6 upload-type = ftp upload-ftp-path = /path/to/directory Set FTP user, password, etc in the [ftp] header! Execute a Command \u00b6 upload-type = exec upload-command = /path/to/program upload-args = all arguments here upload-command \u00b6 The program or script to execute. Supports macros . upload-args \u00b6 The arguments given to the upload-command . Supports macros . uTorrent Dynamic Directory \u00b6 upload-type = dyndir upload-dyndir = c:\\the\\windows\\path\\$(macro)$(macro2)\\$(macro3) You need to initialize path-utorrent below [options] or it won't work! Important: autodl-irssi assumes that the Z: drive is mapped to your / (root) directory if you're using Wine to run uTorrent. upload-dyndir \u00b6 The directory to save the torrent. Supports macros . Macros \u00b6 Enclose the macro in double quotes if it's possible that the macro contains spaces. $(year) - Current year. $(month) - Current month. $(day) - Current day. $(hour) - Current hour. $(minute) - Current minute. $(second) - Current second. $(milli) - Current millisecond. $(FilterName) - Name of matched filter. $(Site) - Tracker type from the tracker file. $(Tracker) - The long tracker name from the tracker file. $(TrackerShort) - The short tracker name from the tracker file. $(TorrentPathName) - The path to the .torrent file (unix path if you're using cygwin). $(WinTorrentPathName) - The windows path to the .torrent file. $(InfoHash) - The info hash of the torrent file. $(InfoName) - The name from the info section of the torrent file. $(TYear) - Torrent release year. $(Name1) , $(Artist) , $(Show) , $(Movie) - Equivalent to the shows/artist value. $(Name2) , $(Album) - Equivalent to the album value. $(Category) $(TorrentName) $(Uploader) $(TorrentSize) $(PreTime) $(TorrentUrl) $(TorrentSslUrl) $(Season) $(Season2) - Two digit season number. $(Episode) $(Episode2) - Two digit episode number. $(Resolution) $(Source) $(Encoder) $(Container) $(Format) $(Bitrate) $(Media) $(Tags) $(Scene) $(ReleaseGroup) $(Log) $(Cue)","title":"Actions"},{"location":"configuration/actions/#test","text":"upload-type = test Take no action after matching an announce. This is the default action.","title":"Test"},{"location":"configuration/actions/#rtorrent","text":"upload-type = rtorrent rt-dir = /home/YOURNAME/downloads/$(Month)$(Day)/$(Tracker) rt-commands = print=\"Added: $(TorrentName)\"; print=\"Hello, world!\" rt-label = $(Tracker) #rt-ratio-group = rat_3 #rt-channel = thr_2 rt-priority = high #rt-ignore-scheduler = true #rt-dont-add-name = false","title":"rTorrent"},{"location":"configuration/actions/#rt-dir","text":"The destination directory. The torrent data will be saved here. Supports macros .","title":"rt-dir"},{"location":"configuration/actions/#rt-commands","text":"Execute the given rTorrent commands when loading the torrent file.","title":"rt-commands"},{"location":"configuration/actions/#rt-label","text":"Set a ruTorrent label.","title":"rt-label"},{"location":"configuration/actions/#rt-ratio-group","text":"Set a ruTorrent ratio group. Valid names are rat_0, rat_1, ..., rat_7. You must have the ratio ruTorrent plugin installed.","title":"rt-ratio-group"},{"location":"configuration/actions/#rt-channel","text":"Set a ruTorrent channel. Valid names are thr_0, thr_1, ..., thr_9. You must have the throttle ruTorrent plugin installed.","title":"rt-channel"},{"location":"configuration/actions/#rt-priority","text":"Set the torrent priority. Valid values are 0, dont-download, 1, low, 2, normal, 3, high. If you set it to dont-download (or 0), the torrent is loaded, but not started.","title":"rt-priority"},{"location":"configuration/actions/#rt-ignore-scheduler","text":"Set it to true to disable the ruTorrent scheduler.","title":"rt-ignore-scheduler"},{"location":"configuration/actions/#rt-dont-add-name","text":"Set it to true if you don't want the torrent name to be added to the path.","title":"rt-dont-add-name"},{"location":"configuration/actions/#watch-directory","text":"upload-type = watchdir upload-watch-dir = /home/myusername/mywatchdir","title":"Watch Directory"},{"location":"configuration/actions/#upload-watch-dir","text":"Your torrent client's watch directory. Supports macros .","title":"upload-watch-dir"},{"location":"configuration/actions/#utorrent-webui","text":"upload-type = webui Set webui user, password, etc below the [webui] header!","title":"uTorrent WebUI"},{"location":"configuration/actions/#ftp","text":"upload-type = ftp upload-ftp-path = /path/to/directory Set FTP user, password, etc in the [ftp] header!","title":"FTP"},{"location":"configuration/actions/#execute-a-command","text":"upload-type = exec upload-command = /path/to/program upload-args = all arguments here","title":"Execute a Command"},{"location":"configuration/actions/#upload-command","text":"The program or script to execute. Supports macros .","title":"upload-command"},{"location":"configuration/actions/#upload-args","text":"The arguments given to the upload-command . Supports macros .","title":"upload-args"},{"location":"configuration/actions/#utorrent-dynamic-directory","text":"upload-type = dyndir upload-dyndir = c:\\the\\windows\\path\\$(macro)$(macro2)\\$(macro3) You need to initialize path-utorrent below [options] or it won't work! Important: autodl-irssi assumes that the Z: drive is mapped to your / (root) directory if you're using Wine to run uTorrent.","title":"uTorrent Dynamic Directory"},{"location":"configuration/actions/#upload-dyndir","text":"The directory to save the torrent. Supports macros .","title":"upload-dyndir"},{"location":"configuration/actions/#macros","text":"Enclose the macro in double quotes if it's possible that the macro contains spaces. $(year) - Current year. $(month) - Current month. $(day) - Current day. $(hour) - Current hour. $(minute) - Current minute. $(second) - Current second. $(milli) - Current millisecond. $(FilterName) - Name of matched filter. $(Site) - Tracker type from the tracker file. $(Tracker) - The long tracker name from the tracker file. $(TrackerShort) - The short tracker name from the tracker file. $(TorrentPathName) - The path to the .torrent file (unix path if you're using cygwin). $(WinTorrentPathName) - The windows path to the .torrent file. $(InfoHash) - The info hash of the torrent file. $(InfoName) - The name from the info section of the torrent file. $(TYear) - Torrent release year. $(Name1) , $(Artist) , $(Show) , $(Movie) - Equivalent to the shows/artist value. $(Name2) , $(Album) - Equivalent to the album value. $(Category) $(TorrentName) $(Uploader) $(TorrentSize) $(PreTime) $(TorrentUrl) $(TorrentSslUrl) $(Season) $(Season2) - Two digit season number. $(Episode) $(Episode2) - Two digit episode number. $(Resolution) $(Source) $(Encoder) $(Container) $(Format) $(Bitrate) $(Media) $(Tags) $(Scene) $(ReleaseGroup) $(Log) $(Cue)","title":"Macros"},{"location":"configuration/channel/","text":"[channel irc.server.com] name = password = invite-command = invite-http-url = invite-http-header = invite-http-data = Create a separate [channel] header for each channel on each server. name \u00b6 The name of the channel to join. password \u00b6 The channel password. This is usually not needed. invite-command \u00b6 Optional. The IRC command that invites you into the channel. invite-http-url \u00b6 Optional. URL for HTTP invite request. invite-http-header \u00b6 Optional. HTTP header to send, eg: Cookie: uid=12345; pass=asdfqwersdf invite-http-data \u00b6 The HTTP POST data.","title":"Channel"},{"location":"configuration/channel/#name","text":"The name of the channel to join.","title":"name"},{"location":"configuration/channel/#password","text":"The channel password. This is usually not needed.","title":"password"},{"location":"configuration/channel/#invite-command","text":"Optional. The IRC command that invites you into the channel.","title":"invite-command"},{"location":"configuration/channel/#invite-http-url","text":"Optional. URL for HTTP invite request.","title":"invite-http-url"},{"location":"configuration/channel/#invite-http-header","text":"Optional. HTTP header to send, eg: Cookie: uid=12345; pass=asdfqwersdf","title":"invite-http-header"},{"location":"configuration/channel/#invite-http-data","text":"The HTTP POST data.","title":"invite-http-data"},{"location":"configuration/filter/","text":"Create one [filter] header per filter like [filter MY FILTER NAME] . All filter options are optional! If you don't use any filter options, then everything will be downloaded because your filter doesn't filter out anything. Note: Not all filter options are supported on all trackers. General \u00b6 enabled \u00b6 Type: Boolean Default: true Example: enabled = false Description: Use it to disable a filter. All filters are enabled by default. priority \u00b6 Type: Integer Default: 0 Example: priority = 10 Description: Use it to determine the order by which filters are checked. Negative numbers are allowed. match-sites \u00b6 Type: Comma separated list Example: match-sites = tracker1, tracker2, tracker3 Description: It's compared against the tracker. Use the full tracker name, eg. MyTracker or use one of the tracker types found in ~/.irssi/scripts/AutodlIrssi/trackers/ .tracker. Open one of the files and locate the **type=\"XYZ\"* line. Use the value inside the quotes, eg. XYZ . except-sites \u00b6 Description: The exact opposite of match-sites . If a release matches this option, then it's NOT downloaded. min-size \u00b6 Type: Size Example: min-size = 200MB Default: 0 Description: Used to filter out too small torrents. max-size \u00b6 Type: Size Example: max-size = 2.5GB Default: any size is allowed Description: Used to filter out too big torrents. Set it to a reasonable value, eg. for TV-shows, set it to about twice the size of a normal episode (just in case it's a double-episode). upload-delay-secs \u00b6 Type: Integer Default: 0 (no wait) Example: upload-delay-secs = 10 Description: The number of seconds autodl-irssi should wait before uploading/saving the torrent. max-downloads \u00b6 Type: Integer Example: max-downloads = 15 Description: Download no more than this number of torrents per week/month (see max-downloads-per ). Remove the filter option or set it to a negative number to disable it. max-downloads-per \u00b6 Type: String Example: max-downloads-per = week Description: Valid values are day , week , and month . See max-downloads . download-duplicates \u00b6 Type: Boolean Default: false Example: download-duplicates = true Description: By default, it's false so no duplicate releases are downloaded. Set it to true if you want to download the same release if it's re-announced or announced by multiple trackers. P2P \u00b6 match-releases \u00b6 Type: Comma separated list Example: match-releases = The?Simpsons*, American?Dad* Description: It's compared against the torrent name, eg. Some.release.720p.HDTV-GROUP . If the filter should only match TV-shows or movies, it's easier to use the shows filter option since it doesn't require wildcards. except-releases \u00b6 Description: The exact opposite of match-releases . If a release matches this option, then it's NOT downloaded. use-regex \u00b6 Type: Boolean Default: false Description: Changes match/except-releases filter options to use regex instead of wildcard syntax globally. This can also be set globally in the options header. match-release-groups \u00b6 Type: Comma separated list Description: Unless the release matches one of the release groups, it's not downloaded. except-release-groups \u00b6 Type: Comma separated list Description: Opposite of match-release-groups. If the release matches one of the release gorups, it's not downloaded. max-pretime \u00b6 Type: time-since string Example: max-pretime = 2 mins 3 secs Description: Some sites announce the pretime of the release. Use this to filter out old releases. scene \u00b6 Type: Boolean Example: scene = true Description: Some sites mark a release as scene or non-scene. Set it to true if you want only scene releases, false if you only want non-scene releases, or don't use this option if you don't care. origins \u00b6 Type: Comma separated list Example: origins = P2P, Internal Description: Some trackers set the origin of a release in a more fine-grained manner than scene/non-scene. freeleech \u00b6 Type: Boolean Example: freeleech = true Description: Only supported on a few trackers. Set to true if you only want to download freeleech releases. Set to false if you only want non-freeleech releases. Don't set if you don't care. freeleech-percents \u00b6 Type: Number list Example: freeleech-percents = 50,75 Description: Some trackers have multiple levels of freeleech. Set a Number list representing the percentages (without the % sign) of the releases you want to download. TV/Movies \u00b6 shows \u00b6 Type: Comma separated list Example: shows = The Simpsons, American Dad Description: This is for TV-shows and movies. autodl-irssi will automatically extract the TV-show/movie name from a scene release name. Example, The.Simpsons.S35E24.720p.HDTV-BLAH will match a shows option set to the simpsons . You don't need wildcards at all, though it's possible to use wildcards. It's recommended to use shows instead of match-releases if all you want is for the filter to match TV-shows or movies. seasons \u00b6 Type: Number list Example: seasons = 1, 3, 5-10 Description: This is for TV-shows only. Unless the release matches one of the seasons, it's not downloaded. episodes \u00b6 Type: Number list Example: episodes = 1, 3, 5-10 Description: This is for TV-shows only. Unless the release matches one of the episodes, it's not downloaded. smart-episode \u00b6 Type: Boolean Default: false Example: smart-episode = true Description: Set to true to prevent downloading earlier episodes than your latest download. This option is set per filter, not per show, so it only makes sense to set one show per filter. resolutions \u00b6 Type: Comma separated list Example: resolutions = SD, 720p, 1080p Description: This is for TV-shows and movies only. Unless the release matches one of the resolutions, it's not downloaded. Valid resolutions are one or more of the following: SD , 480i , 480p , 576p , 720p , 810p , 1080i , 1080p . encoders \u00b6 Type: Comma separated list Example: encoders = x264, xvid Description: If you don't want windows WMV files, this option could be useful. :) Valid encoders are: XviD , DivX , x264 , h.264 (or h264 ), mpeg2 (or mpeg-2 ), VC-1 (or VC1 ), WMV , Remux , h.264 Remux (or h264 Remux ), VC-1 Remux (or VC1 Remux ). sources \u00b6 Type: Comma separated list Example: sources = HDTV, DVDRip, BluRay Description: This is for TV-shows and movies only. Unless the release matches one of the sources, it's not downloaded. Valid sources are one or more of the following: DSR , PDTV , HDTV , HR.PDTV , HR.HDTV , DVDRip , DVDScr , BDr , BD5 , BD9 , BDRip , BRRip , DVDR , MDVDR , HDDVD , HDDVDRip , BluRay , WEB-DL , TVRip , CAM , R5 , TELESYNC , TS , TELECINE , TC . TELESYNC and TS are synonyms (you don't need both). Same for TELECINE and TC . containers \u00b6 Type: Comma separated list Example: containers = mkv, mp4 Description: Unless the release matches one of the containers, it's not downloaded. years \u00b6 Type: Number list Example: years = 1999, 2005-2010 Description: Not all releases have a year in the torrent name, but if it does, you can use it to filter out too old or too new releases. Music \u00b6 years \u00b6 Type: Number list Example: years = 1999, 2005-2010 Description: Not all releases have a year in the torrent name, but if it does, you can use it to filter out too old or too new releases. artists \u00b6 Type: Comma separated list Example: shows = Muse, Modest Mouse Description: This is for artists/groups. You don't need wildcards at all, though it's possible to use wildcards. albums \u00b6 Type: Comma separated list Example: albums = Some album, Some other album, yet another one Description: match-release-types \u00b6 Type: Comma separated list Example: match-release-types = Album,Single,EP Description: Matches on the release type of the torrent. except-release-types \u00b6 Type: Comma separated list Description: The exact opposite of match-release-types . When this matches, do NOT download the torrent. formats \u00b6 Type: Comma separated list Example: formats = MP3, FLAC Description: List the formats you want. Valid formats are: MP3 , FLAC , Ogg , AAC , AC3 , DTS . bitrates \u00b6 Type: Comma separated list Example: bitrates = 192, V0 (vbr), lossless Description: List the bitrates you want. Some example values: 192 , 320 , APS (VBR) , V2 (VBR) , V1 (VBR) , APX (VBR) , V0 (VBR) , q8.x (VBR) , Lossless , 24bit Lossless , Other . media \u00b6 Type: Comma separated list Example: media = CD, WEB Description: List the media you want. Valid media are: CD , DVD , Vinyl , Soundboard , SACD , DAT , Cassette , WEB , Other . cue \u00b6 Type: Boolean Example: cue = true Description: what.cd. Set it to true if you only want releases with a cue file, false if you don't want releases with cue files, or don't use this option if you don't care. log \u00b6 Type: Boolean Example: log = true Description: Set it to true if you only want releases with a log file, false if you don't want releases with log files, or don't use this option if you don't care. log-scores \u00b6 Type: Number list Default: Any score allowed Example: log-scores = 90-95,96,98,100 Description: Set the log scores of the releases you want to match. Advanced \u00b6 match-categories \u00b6 Type: Comma separated list Example: match-categories = MP3 , TV/XVID Description: It's compared against the torrent category. except-categories \u00b6 Description: The exact opposite of match-categories . If a release matches this option, then it's NOT downloaded. match-uploaders \u00b6 Type: Comma separated list Example: match-uploaders = uploader1, uploader2 Description: Use it to only download from certain uploaders. except-uploaders \u00b6 Description: The exact opposite of match-uploaders . If a release matches this option, then it's NOT downloaded. tags \u00b6 Type: Comma separated list Example: tags = hip hop, rock Description: Unless at least one of your tags matches the release's tags, it's not downloaded. See also except-tags and tags-any . except-tags \u00b6 Type: Comma separated list Example: except-tags = hip hop, rock Description: Same as tags except if it matches any/all of these, it's not downloaded. See also tags and except-tags-any . tags-any \u00b6 Type: Boolean Default: true Example: tags-any = false Description: Decides how to match the tags option, ie., if any or all of the tags must match. except-tags-any \u00b6 Type: Boolean Default: true Example: except-tags-any = true Description: Decides how to match the except-tags option, ie., if any or all of the tags must match.","title":"Filter"},{"location":"configuration/filter/#general","text":"","title":"General"},{"location":"configuration/filter/#enabled","text":"Type: Boolean Default: true Example: enabled = false Description: Use it to disable a filter. All filters are enabled by default.","title":"enabled"},{"location":"configuration/filter/#priority","text":"Type: Integer Default: 0 Example: priority = 10 Description: Use it to determine the order by which filters are checked. Negative numbers are allowed.","title":"priority"},{"location":"configuration/filter/#match-sites","text":"Type: Comma separated list Example: match-sites = tracker1, tracker2, tracker3 Description: It's compared against the tracker. Use the full tracker name, eg. MyTracker or use one of the tracker types found in ~/.irssi/scripts/AutodlIrssi/trackers/ .tracker. Open one of the files and locate the **type=\"XYZ\"* line. Use the value inside the quotes, eg. XYZ .","title":"match-sites"},{"location":"configuration/filter/#except-sites","text":"Description: The exact opposite of match-sites . If a release matches this option, then it's NOT downloaded.","title":"except-sites"},{"location":"configuration/filter/#min-size","text":"Type: Size Example: min-size = 200MB Default: 0 Description: Used to filter out too small torrents.","title":"min-size"},{"location":"configuration/filter/#max-size","text":"Type: Size Example: max-size = 2.5GB Default: any size is allowed Description: Used to filter out too big torrents. Set it to a reasonable value, eg. for TV-shows, set it to about twice the size of a normal episode (just in case it's a double-episode).","title":"max-size"},{"location":"configuration/filter/#upload-delay-secs","text":"Type: Integer Default: 0 (no wait) Example: upload-delay-secs = 10 Description: The number of seconds autodl-irssi should wait before uploading/saving the torrent.","title":"upload-delay-secs"},{"location":"configuration/filter/#max-downloads","text":"Type: Integer Example: max-downloads = 15 Description: Download no more than this number of torrents per week/month (see max-downloads-per ). Remove the filter option or set it to a negative number to disable it.","title":"max-downloads"},{"location":"configuration/filter/#max-downloads-per","text":"Type: String Example: max-downloads-per = week Description: Valid values are day , week , and month . See max-downloads .","title":"max-downloads-per"},{"location":"configuration/filter/#download-duplicates","text":"Type: Boolean Default: false Example: download-duplicates = true Description: By default, it's false so no duplicate releases are downloaded. Set it to true if you want to download the same release if it's re-announced or announced by multiple trackers.","title":"download-duplicates"},{"location":"configuration/filter/#p2p","text":"","title":"P2P"},{"location":"configuration/filter/#match-releases","text":"Type: Comma separated list Example: match-releases = The?Simpsons*, American?Dad* Description: It's compared against the torrent name, eg. Some.release.720p.HDTV-GROUP . If the filter should only match TV-shows or movies, it's easier to use the shows filter option since it doesn't require wildcards.","title":"match-releases"},{"location":"configuration/filter/#except-releases","text":"Description: The exact opposite of match-releases . If a release matches this option, then it's NOT downloaded.","title":"except-releases"},{"location":"configuration/filter/#use-regex","text":"Type: Boolean Default: false Description: Changes match/except-releases filter options to use regex instead of wildcard syntax globally. This can also be set globally in the options header.","title":"use-regex"},{"location":"configuration/filter/#match-release-groups","text":"Type: Comma separated list Description: Unless the release matches one of the release groups, it's not downloaded.","title":"match-release-groups"},{"location":"configuration/filter/#except-release-groups","text":"Type: Comma separated list Description: Opposite of match-release-groups. If the release matches one of the release gorups, it's not downloaded.","title":"except-release-groups"},{"location":"configuration/filter/#max-pretime","text":"Type: time-since string Example: max-pretime = 2 mins 3 secs Description: Some sites announce the pretime of the release. Use this to filter out old releases.","title":"max-pretime"},{"location":"configuration/filter/#scene","text":"Type: Boolean Example: scene = true Description: Some sites mark a release as scene or non-scene. Set it to true if you want only scene releases, false if you only want non-scene releases, or don't use this option if you don't care.","title":"scene"},{"location":"configuration/filter/#origins","text":"Type: Comma separated list Example: origins = P2P, Internal Description: Some trackers set the origin of a release in a more fine-grained manner than scene/non-scene.","title":"origins"},{"location":"configuration/filter/#freeleech","text":"Type: Boolean Example: freeleech = true Description: Only supported on a few trackers. Set to true if you only want to download freeleech releases. Set to false if you only want non-freeleech releases. Don't set if you don't care.","title":"freeleech"},{"location":"configuration/filter/#freeleech-percents","text":"Type: Number list Example: freeleech-percents = 50,75 Description: Some trackers have multiple levels of freeleech. Set a Number list representing the percentages (without the % sign) of the releases you want to download.","title":"freeleech-percents"},{"location":"configuration/filter/#tvmovies","text":"","title":"TV/Movies"},{"location":"configuration/filter/#shows","text":"Type: Comma separated list Example: shows = The Simpsons, American Dad Description: This is for TV-shows and movies. autodl-irssi will automatically extract the TV-show/movie name from a scene release name. Example, The.Simpsons.S35E24.720p.HDTV-BLAH will match a shows option set to the simpsons . You don't need wildcards at all, though it's possible to use wildcards. It's recommended to use shows instead of match-releases if all you want is for the filter to match TV-shows or movies.","title":"shows"},{"location":"configuration/filter/#seasons","text":"Type: Number list Example: seasons = 1, 3, 5-10 Description: This is for TV-shows only. Unless the release matches one of the seasons, it's not downloaded.","title":"seasons"},{"location":"configuration/filter/#episodes","text":"Type: Number list Example: episodes = 1, 3, 5-10 Description: This is for TV-shows only. Unless the release matches one of the episodes, it's not downloaded.","title":"episodes"},{"location":"configuration/filter/#smart-episode","text":"Type: Boolean Default: false Example: smart-episode = true Description: Set to true to prevent downloading earlier episodes than your latest download. This option is set per filter, not per show, so it only makes sense to set one show per filter.","title":"smart-episode"},{"location":"configuration/filter/#resolutions","text":"Type: Comma separated list Example: resolutions = SD, 720p, 1080p Description: This is for TV-shows and movies only. Unless the release matches one of the resolutions, it's not downloaded. Valid resolutions are one or more of the following: SD , 480i , 480p , 576p , 720p , 810p , 1080i , 1080p .","title":"resolutions"},{"location":"configuration/filter/#encoders","text":"Type: Comma separated list Example: encoders = x264, xvid Description: If you don't want windows WMV files, this option could be useful. :) Valid encoders are: XviD , DivX , x264 , h.264 (or h264 ), mpeg2 (or mpeg-2 ), VC-1 (or VC1 ), WMV , Remux , h.264 Remux (or h264 Remux ), VC-1 Remux (or VC1 Remux ).","title":"encoders"},{"location":"configuration/filter/#sources","text":"Type: Comma separated list Example: sources = HDTV, DVDRip, BluRay Description: This is for TV-shows and movies only. Unless the release matches one of the sources, it's not downloaded. Valid sources are one or more of the following: DSR , PDTV , HDTV , HR.PDTV , HR.HDTV , DVDRip , DVDScr , BDr , BD5 , BD9 , BDRip , BRRip , DVDR , MDVDR , HDDVD , HDDVDRip , BluRay , WEB-DL , TVRip , CAM , R5 , TELESYNC , TS , TELECINE , TC . TELESYNC and TS are synonyms (you don't need both). Same for TELECINE and TC .","title":"sources"},{"location":"configuration/filter/#containers","text":"Type: Comma separated list Example: containers = mkv, mp4 Description: Unless the release matches one of the containers, it's not downloaded.","title":"containers"},{"location":"configuration/filter/#years","text":"Type: Number list Example: years = 1999, 2005-2010 Description: Not all releases have a year in the torrent name, but if it does, you can use it to filter out too old or too new releases.","title":"years"},{"location":"configuration/filter/#music","text":"","title":"Music"},{"location":"configuration/filter/#years_1","text":"Type: Number list Example: years = 1999, 2005-2010 Description: Not all releases have a year in the torrent name, but if it does, you can use it to filter out too old or too new releases.","title":"years"},{"location":"configuration/filter/#artists","text":"Type: Comma separated list Example: shows = Muse, Modest Mouse Description: This is for artists/groups. You don't need wildcards at all, though it's possible to use wildcards.","title":"artists"},{"location":"configuration/filter/#albums","text":"Type: Comma separated list Example: albums = Some album, Some other album, yet another one Description:","title":"albums"},{"location":"configuration/filter/#match-release-types","text":"Type: Comma separated list Example: match-release-types = Album,Single,EP Description: Matches on the release type of the torrent.","title":"match-release-types"},{"location":"configuration/filter/#except-release-types","text":"Type: Comma separated list Description: The exact opposite of match-release-types . When this matches, do NOT download the torrent.","title":"except-release-types"},{"location":"configuration/filter/#formats","text":"Type: Comma separated list Example: formats = MP3, FLAC Description: List the formats you want. Valid formats are: MP3 , FLAC , Ogg , AAC , AC3 , DTS .","title":"formats"},{"location":"configuration/filter/#bitrates","text":"Type: Comma separated list Example: bitrates = 192, V0 (vbr), lossless Description: List the bitrates you want. Some example values: 192 , 320 , APS (VBR) , V2 (VBR) , V1 (VBR) , APX (VBR) , V0 (VBR) , q8.x (VBR) , Lossless , 24bit Lossless , Other .","title":"bitrates"},{"location":"configuration/filter/#media","text":"Type: Comma separated list Example: media = CD, WEB Description: List the media you want. Valid media are: CD , DVD , Vinyl , Soundboard , SACD , DAT , Cassette , WEB , Other .","title":"media"},{"location":"configuration/filter/#cue","text":"Type: Boolean Example: cue = true Description: what.cd. Set it to true if you only want releases with a cue file, false if you don't want releases with cue files, or don't use this option if you don't care.","title":"cue"},{"location":"configuration/filter/#log","text":"Type: Boolean Example: log = true Description: Set it to true if you only want releases with a log file, false if you don't want releases with log files, or don't use this option if you don't care.","title":"log"},{"location":"configuration/filter/#log-scores","text":"Type: Number list Default: Any score allowed Example: log-scores = 90-95,96,98,100 Description: Set the log scores of the releases you want to match.","title":"log-scores"},{"location":"configuration/filter/#advanced","text":"","title":"Advanced"},{"location":"configuration/filter/#match-categories","text":"Type: Comma separated list Example: match-categories = MP3 , TV/XVID Description: It's compared against the torrent category.","title":"match-categories"},{"location":"configuration/filter/#except-categories","text":"Description: The exact opposite of match-categories . If a release matches this option, then it's NOT downloaded.","title":"except-categories"},{"location":"configuration/filter/#match-uploaders","text":"Type: Comma separated list Example: match-uploaders = uploader1, uploader2 Description: Use it to only download from certain uploaders.","title":"match-uploaders"},{"location":"configuration/filter/#except-uploaders","text":"Description: The exact opposite of match-uploaders . If a release matches this option, then it's NOT downloaded.","title":"except-uploaders"},{"location":"configuration/filter/#tags","text":"Type: Comma separated list Example: tags = hip hop, rock Description: Unless at least one of your tags matches the release's tags, it's not downloaded. See also except-tags and tags-any .","title":"tags"},{"location":"configuration/filter/#except-tags","text":"Type: Comma separated list Example: except-tags = hip hop, rock Description: Same as tags except if it matches any/all of these, it's not downloaded. See also tags and except-tags-any .","title":"except-tags"},{"location":"configuration/filter/#tags-any","text":"Type: Boolean Default: true Example: tags-any = false Description: Decides how to match the tags option, ie., if any or all of the tags must match.","title":"tags-any"},{"location":"configuration/filter/#except-tags-any","text":"Type: Boolean Default: true Example: except-tags-any = true Description: Decides how to match the except-tags option, ie., if any or all of the tags must match.","title":"except-tags-any"},{"location":"configuration/ftp/","text":"[ftp] user = password = hostname = port = user \u00b6 Your FTP user name. password \u00b6 Your FTP password. hostname \u00b6 The hostname/IP-address of your FTP server. port \u00b6 The port of your FTP server.","title":"FTP"},{"location":"configuration/ftp/#user","text":"Your FTP user name.","title":"user"},{"location":"configuration/ftp/#password","text":"Your FTP password.","title":"password"},{"location":"configuration/ftp/#hostname","text":"The hostname/IP-address of your FTP server.","title":"hostname"},{"location":"configuration/ftp/#port","text":"The port of your FTP server.","title":"port"},{"location":"configuration/irc/","text":"[irc] auto-connect = user-name = real-name = output-server = output-channel = close-nickserv = auto-connect \u00b6 Default (unset) is true. Set to false to disable auto connecting to IRC servers. user-name \u00b6 IRC user name. Leave blank to use irssi's setting. real-name \u00b6 IRC real name. Leave blank to use irssi's setting. output-server/output-channel \u00b6 Send all autodl-irssi output to the specified IRC server and channel. (Make sure you've setup autodl-irssi to auto connect to the IRC server and channel.) close-nickserv \u00b6 Set to true to have nickserv query windows closed after successful register and identify commands.","title":"IRC"},{"location":"configuration/irc/#auto-connect","text":"Default (unset) is true. Set to false to disable auto connecting to IRC servers.","title":"auto-connect"},{"location":"configuration/irc/#user-name","text":"IRC user name. Leave blank to use irssi's setting.","title":"user-name"},{"location":"configuration/irc/#real-name","text":"IRC real name. Leave blank to use irssi's setting.","title":"real-name"},{"location":"configuration/irc/#output-serveroutput-channel","text":"Send all autodl-irssi output to the specified IRC server and channel. (Make sure you've setup autodl-irssi to auto connect to the IRC server and channel.)","title":"output-server/output-channel"},{"location":"configuration/irc/#close-nickserv","text":"Set to true to have nickserv query windows closed after successful register and identify commands.","title":"close-nickserv"},{"location":"configuration/options/","text":"These options change the behavior of autodl-irssi. Place these options below the [options] header. gui-server-port \u00b6 Type: Integer (valid port number) Example: gui-server-port = 11111 Description: The port used to communicate with the ruTorrent plugin if enabled. gui-server-password \u00b6 Type: String Example: gui-server-password = abcdefg Description: The password used to secure communication with the ruTorrent plugin if enabled. rt-address \u00b6 Type: String Default: Whatever is found in ~/.rtorrent.rc Example: rt-address = 127.0.0.1:5000 Description: If you use the 'rtorrent' action ( upload-method ), then you must initialize this to your rtorrent's SCGI address. It can be ip:port (eg. 127.0.0.1:5000) or /path/to/socket. update-check \u00b6 Type: string Default: ask Example: update-check = auto Description: autodl-irssi can auto update itself. Valid values are ask , auto , and disabled . ask will print a message when there's a new version. auto will automatically update it when there's a new version. disabled won't do a thing when there's a new update. output-level \u00b6 Type: Integer greater than or equal to 0. Default: 3 Description: Set the verbosity of autodl. debug \u00b6 Type: Boolean Default: false Description: Enable lower level debug messages at set output-level . advanced-output-sites \u00b6 Type: Comma separated list Example: advanced-output-sites = tracker1, tracker2, tracker3 Description: Output captured variables from announces. It's compared against the tracker type found in ~/.irssi/scripts/AutodlIrssi/trackers/ .tracker as used by the **matched-sites* filter option. Open one of the files and locate the type=\"XYZ\" line. Use the value inside the quotes, eg. XYZ . Setting advanced-output-sites = all will enable advanced output for all trackers. use-regex \u00b6 Type: Boolean Default: false Description: Changes match/except-releases filter options to use regex instead of wildcard syntax globally. This can also be set per filter. max-saved-releases \u00b6 Type: Integer greater than or equal to 0. Default: 1000 Example: max-saved-releases = 200 Description: autodl-irssi will remember the last max-saved-releases releases you have downloaded so it won't re-download the same file again. Only useful if save-download-history is enabled. save-download-history \u00b6 Type: Boolean Default: true Example: save-download-history = true Description: Set it to false to disable writing the last N (= max-saved-releases ) downloaded releases to ~/.autodl/DownloadHistory.txt. download-duplicates \u00b6 Type: Boolean Default: false Example: download-duplicates = true Description: By default, it's false so no duplicate releases are downloaded. Set it to true if you want to download the same release if it's re-announced or announced by multiple trackers. unique-torrent-names \u00b6 Type: Boolean Default: false Example: unique-torrent-names = true Description: If true, all saved torrent filenames are unique (the site name is prepended to the filename). Set it to false to use the torrent release name as the filename. download-retry-time-seconds \u00b6 Type: Integer Default: 300 Example: download-retry-time-seconds = 120 Description: If a download fails, autodl-irssi will try to re-download it every 3 seconds for download-retry-time-seconds seconds. It will give up after download-retry-time-seconds and report an error. path-utorrent \u00b6 Type: String Default: nothing Example: path-utorrent = /cygdrive/c/Program Files (x86)/uTorrent/uTorrent.exe Description: Set it to the path of uTorrent if you're using an upload-type equal to dyndir . upload-type \u00b6 Type: String Default: test Description: Set the action to take when an announce is matched. See actions for related settings. Wake on LAN \u00b6 It's possible to wake up the computer before uploading the torrent (uTorrent webui or FTP upload). You may need to make sure your BIOS and network card have WOL enabled. wol-mac-address = 00:11:22:33:44:55 wol-ip-address = 12.34.56.78 (or a DNS name, eg. www.blah.com ) wol-port = 9 (defaults to 9 if you leave it blank) wol-mac-address is the MAC (or hardware) address of the computer's network card. Use ifconfig /all (windows) or ifconfig -a (Linux) to find out your network card's MAC address. If you have a router, then set wol-ip-address to your router's public IP address, and make sure the router forwards UDP packets to port wol-port (default 9) to your router's internal broadcast address (usually 192.168.0.255).","title":"Options"},{"location":"configuration/options/#gui-server-port","text":"Type: Integer (valid port number) Example: gui-server-port = 11111 Description: The port used to communicate with the ruTorrent plugin if enabled.","title":"gui-server-port"},{"location":"configuration/options/#gui-server-password","text":"Type: String Example: gui-server-password = abcdefg Description: The password used to secure communication with the ruTorrent plugin if enabled.","title":"gui-server-password"},{"location":"configuration/options/#rt-address","text":"Type: String Default: Whatever is found in ~/.rtorrent.rc Example: rt-address = 127.0.0.1:5000 Description: If you use the 'rtorrent' action ( upload-method ), then you must initialize this to your rtorrent's SCGI address. It can be ip:port (eg. 127.0.0.1:5000) or /path/to/socket.","title":"rt-address"},{"location":"configuration/options/#update-check","text":"Type: string Default: ask Example: update-check = auto Description: autodl-irssi can auto update itself. Valid values are ask , auto , and disabled . ask will print a message when there's a new version. auto will automatically update it when there's a new version. disabled won't do a thing when there's a new update.","title":"update-check"},{"location":"configuration/options/#output-level","text":"Type: Integer greater than or equal to 0. Default: 3 Description: Set the verbosity of autodl.","title":"output-level"},{"location":"configuration/options/#debug","text":"Type: Boolean Default: false Description: Enable lower level debug messages at set output-level .","title":"debug"},{"location":"configuration/options/#advanced-output-sites","text":"Type: Comma separated list Example: advanced-output-sites = tracker1, tracker2, tracker3 Description: Output captured variables from announces. It's compared against the tracker type found in ~/.irssi/scripts/AutodlIrssi/trackers/ .tracker as used by the **matched-sites* filter option. Open one of the files and locate the type=\"XYZ\" line. Use the value inside the quotes, eg. XYZ . Setting advanced-output-sites = all will enable advanced output for all trackers.","title":"advanced-output-sites"},{"location":"configuration/options/#use-regex","text":"Type: Boolean Default: false Description: Changes match/except-releases filter options to use regex instead of wildcard syntax globally. This can also be set per filter.","title":"use-regex"},{"location":"configuration/options/#max-saved-releases","text":"Type: Integer greater than or equal to 0. Default: 1000 Example: max-saved-releases = 200 Description: autodl-irssi will remember the last max-saved-releases releases you have downloaded so it won't re-download the same file again. Only useful if save-download-history is enabled.","title":"max-saved-releases"},{"location":"configuration/options/#save-download-history","text":"Type: Boolean Default: true Example: save-download-history = true Description: Set it to false to disable writing the last N (= max-saved-releases ) downloaded releases to ~/.autodl/DownloadHistory.txt.","title":"save-download-history"},{"location":"configuration/options/#download-duplicates","text":"Type: Boolean Default: false Example: download-duplicates = true Description: By default, it's false so no duplicate releases are downloaded. Set it to true if you want to download the same release if it's re-announced or announced by multiple trackers.","title":"download-duplicates"},{"location":"configuration/options/#unique-torrent-names","text":"Type: Boolean Default: false Example: unique-torrent-names = true Description: If true, all saved torrent filenames are unique (the site name is prepended to the filename). Set it to false to use the torrent release name as the filename.","title":"unique-torrent-names"},{"location":"configuration/options/#download-retry-time-seconds","text":"Type: Integer Default: 300 Example: download-retry-time-seconds = 120 Description: If a download fails, autodl-irssi will try to re-download it every 3 seconds for download-retry-time-seconds seconds. It will give up after download-retry-time-seconds and report an error.","title":"download-retry-time-seconds"},{"location":"configuration/options/#path-utorrent","text":"Type: String Default: nothing Example: path-utorrent = /cygdrive/c/Program Files (x86)/uTorrent/uTorrent.exe Description: Set it to the path of uTorrent if you're using an upload-type equal to dyndir .","title":"path-utorrent"},{"location":"configuration/options/#upload-type","text":"Type: String Default: test Description: Set the action to take when an announce is matched. See actions for related settings.","title":"upload-type"},{"location":"configuration/options/#wake-on-lan","text":"It's possible to wake up the computer before uploading the torrent (uTorrent webui or FTP upload). You may need to make sure your BIOS and network card have WOL enabled. wol-mac-address = 00:11:22:33:44:55 wol-ip-address = 12.34.56.78 (or a DNS name, eg. www.blah.com ) wol-port = 9 (defaults to 9 if you leave it blank) wol-mac-address is the MAC (or hardware) address of the computer's network card. Use ifconfig /all (windows) or ifconfig -a (Linux) to find out your network card's MAC address. If you have a router, then set wol-ip-address to your router's public IP address, and make sure the router forwards UDP packets to port wol-port (default 9) to your router's internal broadcast address (usually 192.168.0.255).","title":"Wake on LAN"},{"location":"configuration/overview/","text":"All filters and options are read from ~/.autodl/autodl.cfg. The file will be automatically re-read when changes are made to it when autodl-irssi is running. If you use non-ASCII characters, set the encoding (aka character coding) to UTF-8 before saving. Formatting \u00b6 All lines starting with the # character are ignored as comments. You may use this to disable options. The options are in the form of option-name = value . All value options are case-insensitive. There are different option types: * Comma separated lists (value1, value2, value3) * Number lists (1980-1999, 2010, 2012) * Strings * Integers * Booleans (True/False) * Sizes (120MB, 4.5GB) The comma separated list type supports wildcards, where * means 0 or more characters and ? means exactly one character. Headers \u00b6 The file is made up of headers in the form of [headername] with the options for that header immediately below. The headers are: Options - Global options for autodl-irssi Actions - Torrent action settings IRC - General IRC configuration for autodl-irssi Server - Settings for tracker IRC servers Channel - Settings for tracker announce channels Tracker - Tracker authentication options Filter - Settings to filter announces WebUI - uTorrent WebUI torrent action settings FTP - FTP torrent action settings","title":"Overview"},{"location":"configuration/overview/#formatting","text":"All lines starting with the # character are ignored as comments. You may use this to disable options. The options are in the form of option-name = value . All value options are case-insensitive. There are different option types: * Comma separated lists (value1, value2, value3) * Number lists (1980-1999, 2010, 2012) * Strings * Integers * Booleans (True/False) * Sizes (120MB, 4.5GB) The comma separated list type supports wildcards, where * means 0 or more characters and ? means exactly one character.","title":"Formatting"},{"location":"configuration/overview/#headers","text":"The file is made up of headers in the form of [headername] with the options for that header immediately below. The headers are: Options - Global options for autodl-irssi Actions - Torrent action settings IRC - General IRC configuration for autodl-irssi Server - Settings for tracker IRC servers Channel - Settings for tracker announce channels Tracker - Tracker authentication options Filter - Settings to filter announces WebUI - uTorrent WebUI torrent action settings FTP - FTP torrent action settings","title":"Headers"},{"location":"configuration/server/","text":"[server irc.server.com] enabled = port = ssl = nick = ident-password = ident-email = server-password = bnc = enabled \u00b6 Default(unset) is true. Set to false to disable connecting to that server. port \u00b6 The IRC server port. Default 6667 or 6697 (SSL). ssl \u00b6 Set to true to use SSL connection. nick \u00b6 Your IRC nick. ident-password \u00b6 The password required to identify your IRC nick to NickServ. If it's not already registered, autodl-irssi will attempt to register it for you. ident-email \u00b6 Optional. Required if autodl-irssi needs to register your nick. server-password \u00b6 The IRC server password. This allows connection to some IRC bouncers. bnc \u00b6 Set to true if you are using an IRC bouncer so you won't have to set a nick in the server header.","title":"Server"},{"location":"configuration/server/#enabled","text":"Default(unset) is true. Set to false to disable connecting to that server.","title":"enabled"},{"location":"configuration/server/#port","text":"The IRC server port. Default 6667 or 6697 (SSL).","title":"port"},{"location":"configuration/server/#ssl","text":"Set to true to use SSL connection.","title":"ssl"},{"location":"configuration/server/#nick","text":"Your IRC nick.","title":"nick"},{"location":"configuration/server/#ident-password","text":"The password required to identify your IRC nick to NickServ. If it's not already registered, autodl-irssi will attempt to register it for you.","title":"ident-password"},{"location":"configuration/server/#ident-email","text":"Optional. Required if autodl-irssi needs to register your nick.","title":"ident-email"},{"location":"configuration/server/#server-password","text":"The IRC server password. This allows connection to some IRC bouncers.","title":"server-password"},{"location":"configuration/server/#bnc","text":"Set to true if you are using an IRC bouncer so you won't have to set a nick in the server header.","title":"bnc"},{"location":"configuration/tracker/","text":"[tracker TYPE] enabled = force-ssl = upload-delay-secs = cookie = passkey = etc... TYPE \u00b6 TYPE can be found in the type=\"XYZ\" line in the corresponding tracker file in ~/.irssi/scripts/AutodlIrssi/trackers/ . enabled \u00b6 Default (unset) is true. Set it to false to disable the tracker. force-ssl \u00b6 Not all trackers support HTTPS downloads. Leave it blank for the default value (which is HTTP or HTTPS). upload-delay-secs \u00b6 Set the number of seconds autodl-irssi should wait before uploading/saving the torrent. Default is 0 (no wait). cookie \u00b6 Log in to your tracker's home page with your browser. * Chrome: Options Menu -> Privacy -> Content Settings -> All cookies and site data * Firefox: Firefox Menu -> Options -> Privacy -> Show cookies * Safari: Action Menu -> Preferences -> Privacy -> Details Find your tracker site in the cookielist. The values needed may vary between trackers. Often these are uid and pass . Set the cookie like uid=XXX; pass=YYY , separating each key=value pair with a semicolon. passkey \u00b6 First check a torrent download link if it contains it. If not you can usually find it in the generated RSS-feed URL, which you probably can generate @ yourtracker.com/getrss.php . passkeys are usually exactly 32 characters long. The passkey can also sometimes be found in your profile (click your name). authkey \u00b6 See passkey above. For gazelle sites, it's part of the torrent download link. torrent_pass For gazelle sites, it's part of the torrent download link. uid \u00b6 Click your username and you should see the id=XXX in the address bar. That's your user id, or uid.","title":"Tracker"},{"location":"configuration/tracker/#type","text":"TYPE can be found in the type=\"XYZ\" line in the corresponding tracker file in ~/.irssi/scripts/AutodlIrssi/trackers/ .","title":"TYPE"},{"location":"configuration/tracker/#enabled","text":"Default (unset) is true. Set it to false to disable the tracker.","title":"enabled"},{"location":"configuration/tracker/#force-ssl","text":"Not all trackers support HTTPS downloads. Leave it blank for the default value (which is HTTP or HTTPS).","title":"force-ssl"},{"location":"configuration/tracker/#upload-delay-secs","text":"Set the number of seconds autodl-irssi should wait before uploading/saving the torrent. Default is 0 (no wait).","title":"upload-delay-secs"},{"location":"configuration/tracker/#cookie","text":"Log in to your tracker's home page with your browser. * Chrome: Options Menu -> Privacy -> Content Settings -> All cookies and site data * Firefox: Firefox Menu -> Options -> Privacy -> Show cookies * Safari: Action Menu -> Preferences -> Privacy -> Details Find your tracker site in the cookielist. The values needed may vary between trackers. Often these are uid and pass . Set the cookie like uid=XXX; pass=YYY , separating each key=value pair with a semicolon.","title":"cookie"},{"location":"configuration/tracker/#passkey","text":"First check a torrent download link if it contains it. If not you can usually find it in the generated RSS-feed URL, which you probably can generate @ yourtracker.com/getrss.php . passkeys are usually exactly 32 characters long. The passkey can also sometimes be found in your profile (click your name).","title":"passkey"},{"location":"configuration/tracker/#authkey","text":"See passkey above. For gazelle sites, it's part of the torrent download link. torrent_pass For gazelle sites, it's part of the torrent download link.","title":"authkey"},{"location":"configuration/tracker/#uid","text":"Click your username and you should see the id=XXX in the address bar. That's your user id, or uid.","title":"uid"},{"location":"configuration/webui/","text":"[webui] user = password = hostname = port = ssl = user \u00b6 Your WebUI user name. password \u00b6 Your WebUI password. hostname \u00b6 The IP address (uTorrent only wants IP addresses) of your WebUI. port \u00b6 The port of your WebUI. ssl = true \u00b6 Set to enable encrypted uploads or false to use normal non-encrypted uploads. Read here on how to enable HTTPS webui: http://www.utorrent.com/documentation/webui","title":"WebUI"},{"location":"configuration/webui/#user","text":"Your WebUI user name.","title":"user"},{"location":"configuration/webui/#password","text":"Your WebUI password.","title":"password"},{"location":"configuration/webui/#hostname","text":"The IP address (uTorrent only wants IP addresses) of your WebUI.","title":"hostname"},{"location":"configuration/webui/#port","text":"The port of your WebUI.","title":"port"},{"location":"configuration/webui/#ssl-true","text":"Set to enable encrypted uploads or false to use normal non-encrypted uploads. Read here on how to enable HTTPS webui: http://www.utorrent.com/documentation/webui","title":"ssl = true"}]}